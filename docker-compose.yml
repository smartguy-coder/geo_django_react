services:


  geo_database:
    image: postgis/postgis
    container_name: geo_database
    hostname: geo_database
    restart: always
    env_file:
      - .env
    ports:
      - "6587:${POSTGRES_PORT}"
    volumes:
      - postgres_geo_datastorage:/var/lib/postgresql/data
    networks:
      - main_network

  backend_geo:
    build:
      dockerfile: Dockerfile
      context: ./django_drf_backend
    container_name: backend_geo
    hostname: backend_geo
    restart: always
    env_file:
      - .env
    volumes:
      - ./django_drf_backend:/app
    ports:
      - "8000:8000"
    command: |
      sh -c "
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 --reload core.wsgi:application
      "
    networks:
      - main_network

  react_frontend:
    hostname: react_frontend
    container_name: react_frontend
    build:
      context: ./react_frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./react_frontend:/app
      - /app/node_modules    # Зверни увагу: node_modules, а не node-modules
    command: npm run dev -- --host 0.0.0.0
    networks:
      - main_network


  nginx_geo:
    image: nginx:alpine
    container_name: nginx_geo
    restart: always
    ports:
      - "80:80"
    networks:
      - main_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

networks:
  main_network:
    driver: bridge

volumes:
  postgres_geo_datastorage:
    external: false
